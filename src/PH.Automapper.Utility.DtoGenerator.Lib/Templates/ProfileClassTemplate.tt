<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
using System;
using System.Linq;
using AutoMapper;
using <#= EntityNameSpace #>;
using <#= DtoNameSpace #>;


namespace <#= ProfileNameSpaceName #>
{
    /// <summary>
    /// AutoMapper Profile class for <see cref="<#= EntityName #>"/> and <see cref="<#= DtoName #>"/> mapping
    /// </summary>
    /// <seealso cref="AutoMapper.Profile" />
    <#= GetModifier #> class <#= EntityName #>Profile : AutoMapper.Profile
    {
        public ProfileExample()
        {
            CreateMap<<#= EntityName #>, <#= DtoName #>>()

            #region Entity to Dto

<# foreach (PropertyInfo item in Properties)   
   { #>
            .ForMember(x => x.<#= item.Name #>, o => o.MapFrom(src => src.<#= item.Name #>))

<# } 
#>	            
            .AfterMap((entity, dto, context) =>
            {
                //
            })
            
            #endregion
                   
            .ReverseMap()

            #region Dto to Entity

            .ForMember(x => x.BarId, o => o.MapFrom(src => src.BarId))
            .AfterMap((dto, entity, context) =>
            {
                //
            });
                
            #endregion
                   
            }
        }
}
